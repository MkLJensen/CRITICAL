class GarbageSortingController

instance variables
trucks : set of GarbageTruck := {};

--addrs   : [AddressRepository] := nil;
--plant   : [RecyclingPlant] := nil;
--control : [GarbageSortingController] := nil;

operations
public Step : () ==> ()
Step() == 
(
    dcl fulltrucks : set of GarbageTruck;
    fillTrucks();
    fulltrucks := scanForFullTrucks();
    sendTrucksToPlant(fulltrucks);
);

private scanForFullTrucks : () ==> set of GarbageTruck
scanForFullTrucks() ==
(
    dcl fulltrucks : set of GarbageTruck := {t | t in set trucks & t.isTruckFull()};
    trucks := trucks \ {t | t in set trucks & t.isTruckFull()};
    return fulltrucks;
    -- TODO Will go through trucks, and then it will remove the trucks from the instance variable 
    -- set if they are full, and add them to a local variable that will be returned
);

private fillTrucks : () ==> ()
fillTrucks() ==
(
    skip
    -- TODO Fill garbage at one address in all trucks
);


private sendTrucksToPlant: set of GarbageTruck ==> ()
sendTrucksToPlant(truck) == 
(
    GarbageSortingSystem`plant.addFilledTrucksToPlant(truck)
);


end GarbageSortingController