class GLOBAL

instance variables

public static GARBAGETYPE_MAX_WIDTH     : nat := 20;
public static GARBAGETYPE_MAX_LENGTH    : nat := 15;
public static GARBAGETYPE_MAX_HEIGHT    : nat := 30;
public static GARBAGETRUCK_MAX_WEIGHT   : nat := 1000; --kg
public static GARBAGETRUCK_MAX_VOLUME   : nat := GARBAGETYPE_MAX_WIDTH*GARBAGETYPE_MAX_LENGTH*GARBAGETYPE_MAX_HEIGHT*10; --cm^3


public InvalidAddressChars : set of char := {'!', '#', '¤', '%', '&', '/', '(', ')', '=',
                                            '^', '*', ',', '.', '<', '>', 'æ', 'ø', 'å'};
public allowedIdNbrs : set of char := {'1', '2', '3', '4', '5', '6', '7', '8', '9'};


types 
    public Time = nat;

    public gbpackinputtype = GarbageId * dimensionsType * nat;

    public GarbageId = <GLASSID> | <METALID> | <PAPERID> | <PLASTICID>;

    public dimensionsType :: width  : nat
                            length : nat
                            height : nat;

    
functions
public SumDimensionGarbagePack: set of GarbageType +> nat
SumDimensionGarbagePack(s) ==
    if s = {}                         
    then 0                                         
    else let e in set s in
        e.getVolume() + SumDimensionGarbagePack(s \ {e})
measure card s;

public SumWeightGarbagePack: set of GarbageType +> nat
SumWeightGarbagePack(s) ==
    if s = {}                         
    then 0                                         
    else let e in set s in
        e.getWeight() + SumWeightGarbagePack(s \ {e})
measure card s;


public SumSet: set of nat -> nat
SumSet(s) ==
    if s = {}
    then 0
    else let e in set s in
        e + SumSet(s \ {e})
measure card s;


end GLOBAL